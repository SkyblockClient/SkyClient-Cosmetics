//file:noinspection UnnecessaryQualifiedReference
//file:noinspection GroovyAssignabilityCheck

plugins {
    id "dev.architectury.architectury-pack200" version "0.1.3"
    id "com.github.johnrengelman.shadow" version "7.1.2"
    id "org.jetbrains.kotlin.jvm" version "1.6.10"
    id "cc.woverflow.loom" version "0.10.6"
    id "net.kyori.blossom" version "1.3.0"
    id "java"
}

version = mod_version
group = "co.skyclient"
archivesBaseName = mod_name

blossom {
    String className = "src/main/java/co/skyclient/scc/SkyclientCosmetics.java"
    replaceToken("@VER@", project.version, className)
    replaceToken("@NAME@", mod_name, className)
    replaceToken("@ID@", mod_id, className)
}

sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8
compileJava.options.encoding = 'UTF-8'

compileKotlin {
    kotlinOptions {
        freeCompilerArgs += "-Xjvm-default=all-compatibility"
    }
}

loom {
    launchConfigs {
        client {
            arg("--tweakClass", "cc.woverflow.onecore.tweaker.OneCoreTweaker")
            property("onecore.mixin", "mixins.scc.json")
            property("mixin.debug.export", "true")
        }
    }
    runConfigs {
        client {
            ideConfigGenerated = true
        }
    }
    forge {
        pack200Provider = new dev.architectury.pack200.java.Pack200Adapter()
        mixinConfig("mixins.scc.json")
        mixin.defaultRefmapName.set("mixins.scc.refmap.json")
    }
}

configurations {
    include
    implementation.extendsFrom(include)
    dummyBuild
    dummyImplementation.extendsFrom(dummyBuild)
}

repositories {
    maven { url 'https://repo.woverflow.cc/' }
}

dependencies {
    minecraft("com.mojang:minecraft:1.8.9")
    mappings("de.oceanlabs.mcp:mcp_stable:22-1.8.9")
    forge("net.minecraftforge:forge:1.8.9-11.15.1.2318-1.8.9")
    dummyBuild("gg.essential:essential-1.8.9-forge:1933")
    compileOnly("gg.essential:essential-1.8.9-forge:1933")
    compileOnly 'cc.woverflow:onecore:1.3.3'
    runtimeOnly 'me.djtheredstoner:DevAuth-forge-legacy:1.0.0'
    include 'com.github.JnCrMx:discord-game-sdk4j:v0.5.4'
    include ('cc.woverflow:onecore-tweaker:1.3.0') {
        transitive = false
    }
    compileOnly ('org.spongepowered:mixin:0.8.5-SNAPSHOT')
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", version
    inputs.property "name", mod_name
    inputs.property "id", mod_id

    filesMatching("mcmod.info") {
        expand(
                "id": mod_id,
                "name": mod_name,
                "version": version
        )
    }

    rename '(.+_at.cfg)', 'META-INF/$1'
}

sourceSets {
    dummy {
        java {}
    }
    main {
        compileClasspath += dummy.output
        output.resourcesDir = java.classesDirectory
    }
}


shadowJar {
    archiveClassifier.set('dev')
    configurations = [project.configurations.include]
    duplicatesStrategy DuplicatesStrategy.EXCLUDE
}

remapJar {
    archiveClassifier.set('')
    from(shadowJar.archiveFile)
}

jar {
    manifest.attributes(
            'ModSide': 'CLIENT',
            'ForceLoadAsMod': true,
            'TweakClass': 'cc.woverflow.onecore.tweaker.OneCoreTweaker',
            'MixinConfigs': "mixins.scc.json",
            "TweakOrder": "0"
    )
    enabled = false
}
jar.dependsOn(shadowJar)